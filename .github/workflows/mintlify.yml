name: Mintlify Documentation

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'mintlify/**'
      - 'docs/**'
      - '.github/workflows/mintlify.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'mintlify/**'
      - 'docs/**'
      - '.github/workflows/mintlify.yml'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "mintlify"
  cancel-in-progress: false

jobs:
  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'mintlify/package-lock.json'

      - name: Install Mintlify CLI
        run: npm install -g @mintlify/scraping

      - name: Install dependencies
        run: |
          cd mintlify
          npm ci

      - name: Validate Mintlify configuration
        run: |
          cd mintlify
          npx mintlify dev --stop-on-error

      - name: Check for broken links
        run: |
          cd mintlify
          # Validate that all referenced files exist
          node -e "
            const fs = require('fs');
            const path = require('path');
            const config = JSON.parse(fs.readFileSync('mint.json', 'utf8'));
            
            function checkPages(pages) {
              for (const page of pages) {
                if (typeof page === 'string') {
                  const filePath = page.endsWith('.mdx') ? page : page + '.mdx';
                  if (!fs.existsSync(filePath)) {
                    console.error('Missing file:', filePath);
                    process.exit(1);
                  }
                } else if (page.pages) {
                  checkPages(page.pages);
                }
              }
            }
            
            checkPages(config.navigation.flatMap(nav => nav.pages || []));
            console.log('All referenced files exist');
          "

  deploy:
    name: Deploy to Mintlify
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'mintlify/package-lock.json'

      - name: Install Mintlify CLI
        run: npm install -g @mintlify/scraping

      - name: Deploy to Mintlify
        env:
          MINTLIFY_API_KEY: ${{ secrets.MINTLIFY_API_KEY }}
        run: |
          cd mintlify
          npx mintlify deploy

  sync-from-docs:
    name: Sync from /docs directory
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.modified, 'docs/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Sync documentation files
        run: |
          # Copy updated files from docs/ to mintlify/ structure
          # This maintains the source of truth in /docs while keeping Mintlify structure
          
          # Copy core documentation files
          if [ -f "docs/CORE_CRM.md" ]; then
            cp docs/CORE_CRM.md mintlify/core-crm/overview.mdx
          fi
          
          if [ -f "docs/EXTENDED_OPS.md" ]; then
            cp docs/EXTENDED_OPS.md mintlify/extended-ops/overview.mdx
          fi
          
          if [ -f "docs/CREDIT_SYSTEM.md" ]; then
            cp docs/CREDIT_SYSTEM.md mintlify/credit-kb/credit-overview.mdx
          fi
          
          if [ -f "docs/SECURITY.md" ]; then
            cp docs/SECURITY.md mintlify/pages/privacy-security.mdx
          fi
          
          if [ -f "docs/INTEGRATIONS.md" ]; then
            cp docs/INTEGRATIONS.md mintlify/pages/integrations-overview.mdx
          fi
          
          # Check if any files were updated
          if [ -n "$(git status --porcelain)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add mintlify/
            git commit -m "docs: sync from /docs directory [skip ci]"
            git push
          fi